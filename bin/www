#!/usr/bin/env node

const colors = require('colors');
const app = require('../app');
const config = require('../config');
const createDebug = require('debug');

var debug = createDebug(config.debugId);

/**
 * Setup configured express server.
 */
var port = normalizePort(config.port);
var server = app.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */
function normalizePort(val) {
    let port = parseInt(val, 10);

    if (isNaN(port)) {
        return val;
    }

    if (port >= 0) {
        return port;
    }

    return false;
}

/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    let bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    switch (error.code) {
        case 'EACCES':
        debug((bind + ' requires elevated privileges').red);
        process.exit(1);
        break;
    case 'EADDRINUSE':
        debug((bind + ' is already in use').red);
        process.exit(1);
        break;
    default:
        throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */
function onListening() {
    let addr = server.address();
    let bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Listening on ' + bind);
}