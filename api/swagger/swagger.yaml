swagger: "2.0"
info:
  version: "0.0.1"
  title: Outfittr API
# During dev, host should point to your local machine
host: localhost:3000
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # Remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - x-www-form-urlencoded
# format of the responses to the client (Accepts)
produces:
  - application/json

  
paths:

  /swagger:
    x-swagger-pipe: swagger_raw
    
  /users:
    x-swagger-router-controller: userController
    get:
      description: Returns an array of users.
      operationId: indexUsers
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              users:
                type: array
                items:
                  $ref: '#/definitions/User'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    # post:
    #   description: Creates a user.
    #   operationId: newUser
    #   parameters:
    #     - in: formData
    #       name: name
    #       type: string
    #       description: Name of the user
    #     - in: formData
    #       name: password
    #       type: string
    #       description: Password of the user (to be hashed)
    #   responses:
    #     "200":
    #       description: OK
    #       schema:
    #         $ref: '#/definitions/User'
    #     default:
    #       description: Error
    #       schema:
    #         $ref: "#/definitions/ErrorResponse"

  # /users/{_id}:
  #   x-swagger-router-controller: userController
  #   get:
  #     description: Returns one user
  #     operationId: viewUser
  #     parameters:
  #       - in: path
  #         name: _id
  #         type: string
  #         required: true
  #         description: ID of the user to be viewed.
  #     responses:
  #       "200":
  #         description: OK
  #         schema:
  #           $ref: '#/definitions/User'
  #       default:
  #         description: Error
  #         schema:
  #           $ref: "#/definitions/ErrorResponse"
            
  /garments:
    x-swagger-router-controller: garmentController
    get:
      description: Returns an array of garments.
      operationId: indexGarments
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              users:
                type: array
                items:
                  $ref: '#/definitions/Garment'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /wardrobe:
    x-swagger-router-controller: wardrobeController
    get:
      description: Returns an array of garments in the user's wardrobe.
      operationId: indexWardrobeItems
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              users:
                type: array
                items:
                  $ref: '#/definitions/WardrobeItem'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
            
definitions:

  User:
    type: object
    properties:
      _id:
        type: string
        description: unique ID given by Mongo.
      firstName:
        type: string
        description: First name of the user.
      lastName:
        type: string
        description: Last name of the user.
      email:
        type: string
        description: User's email address.
      username:
        type: string
        description: User's username (for login)
      password:
        type: string
        description: User's password (for login).
      create_date:
        type: string
        description: date that the user joined.
      __v:
        type: integer
        description: I have no idea.
  
  Garment:
    type: object
    properties:
      _id:
        type: string
        description: unique ID given by Mongo.
      type:
        type: string
        description: type of garment
      imageLink:
        type: string
        description: primary color of garment
      __v:
        type: integer
        description: I have no idea.
  
  WardrobeItem:
    type: object
    properties:
      _id:
        type: string
        description: unique ID given by Mongo.
      unavailable:
        type: boolean
        description: Is the wardrobe item dirty, loaned out, or otherwise unavailable?
      owner_id:
        type: string
        description: foreign key linking this wardrobe item to its owner.
      garment_id:
        type: string
        description: foreign key linking this wadrobe item to the garment it is.
      torn:
        type: boolean
        description: Is the wardrobe item torn?
      reserveDate:
        type: string
        description: Optional - a date for which this wardrobe item must be worn
      reserveTilDate:
        type: string
        description: Optional - a date after which the wardrobe item cannot be worn until the reserveDate.
      __v:
        type: integer
        description: I have no idea.

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string